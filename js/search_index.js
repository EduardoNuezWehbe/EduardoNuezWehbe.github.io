var search_data = {"index":{"searchIndex":["practica6","alimento","error","lista","platos","platosa","+()","<=>()","<=>()","each()","empty()","extracthead()","extracttail()","getcarbohidratos()","getcarbohidratos()","getemisiongei()","getgei()","getgramostotales()","gethead()","getlipidos()","getlipidos()","getnombre()","getproteinas()","getproteinas()","gettail()","getterreno()","getterreno()","getvalorcalorico()","getvalorcaloricototal()","insert()","insertvector()","new()","new()","new()","new()","size()","to_s()","to_s()","to_s()","to_s()","gemfile","gemfile.lock","guardfile","readme","rakefile","setup","practica6.gemspec"],"longSearchIndex":["practica6","practica6::alimento","practica6::error","practica6::lista","practica6::platos","practica6::platosa","practica6::alimento#+()","practica6::alimento#<=>()","practica6::platos#<=>()","practica6::lista#each()","practica6::lista#empty()","practica6::lista#extracthead()","practica6::lista#extracttail()","practica6::alimento#getcarbohidratos()","practica6::platos#getcarbohidratos()","practica6::platosa#getemisiongei()","practica6::alimento#getgei()","practica6::platos#getgramostotales()","practica6::lista#gethead()","practica6::alimento#getlipidos()","practica6::platos#getlipidos()","practica6::alimento#getnombre()","practica6::alimento#getproteinas()","practica6::platos#getproteinas()","practica6::lista#gettail()","practica6::alimento#getterreno()","practica6::platosa#getterreno()","practica6::alimento#getvalorcalorico()","practica6::platos#getvalorcaloricototal()","practica6::lista#insert()","practica6::lista#insertvector()","practica6::alimento::new()","practica6::lista::new()","practica6::platos::new()","practica6::platosa::new()","practica6::lista#size()","practica6::alimento#to_s()","practica6::lista#to_s()","practica6::platos#to_s()","practica6::platosa#to_s()","","","","","","",""],"info":[["Practica6","","Practica6.html","",""],["Practica6::Alimento","","Practica6/Alimento.html","","<p>clase comparable alimento. Tiene los datos base para realizar el calculo calorico del alimento. \n"],["Practica6::Error","","Practica6/Error.html","",""],["Practica6::Lista","","Practica6/Lista.html","","<p>clase lista enumerable que utilizara el struct nodo\n"],["Practica6::Platos","","Practica6/Platos.html","","<p>clase platos comparable y enumerable que contiene el nombre del plato la lista de los alimentos del plato …\n"],["Practica6::PlatosA","","Practica6/PlatosA.html","","<p>clase hija de platos, donde se implementan los calculos del gei y del terreno\n"],["+","Practica6::Alimento","Practica6/Alimento.html#method-i-2B","(other)","<p>operador de suma\n"],["<=>","Practica6::Alimento","Practica6/Alimento.html#method-i-3C-3D-3E","(other)","<p>operador spaceship que compara con las calorias del alimento\n"],["<=>","Practica6::Platos","Practica6/Platos.html#method-i-3C-3D-3E","(other)","<p>comparacion spaceship\n"],["each","Practica6::Lista","Practica6/Lista.html#method-i-each","()","<p>implementado para que la lista sea enumerable\n"],["empty","Practica6::Lista","Practica6/Lista.html#method-i-empty","()","<p>comprueba si la lista esta vacia\n"],["extractHead","Practica6::Lista","Practica6/Lista.html#method-i-extractHead","()","<p>extrae el head de la lista\n"],["extractTail","Practica6::Lista","Practica6/Lista.html#method-i-extractTail","()","<p>extrae el tail de la lista\n"],["getCarbohidratos","Practica6::Alimento","Practica6/Alimento.html#method-i-getCarbohidratos","()",""],["getCarbohidratos","Practica6::Platos","Practica6/Platos.html#method-i-getCarbohidratos","()","<p>retona los carbohidratos\n"],["getEmisionGEI","Practica6::PlatosA","Practica6/PlatosA.html#method-i-getEmisionGEI","()","<p>retorna las emisiones GEI\n"],["getGEI","Practica6::Alimento","Practica6/Alimento.html#method-i-getGEI","()",""],["getGramosTotales","Practica6::Platos","Practica6/Platos.html#method-i-getGramosTotales","()","<p>retorna los gramos totales\n"],["getHead","Practica6::Lista","Practica6/Lista.html#method-i-getHead","()","<p>retorna el head de la lista\n"],["getLipidos","Practica6::Alimento","Practica6/Alimento.html#method-i-getLipidos","()",""],["getLipidos","Practica6::Platos","Practica6/Platos.html#method-i-getLipidos","()","<p>retorna los lopidos del plato\n"],["getNombre","Practica6::Alimento","Practica6/Alimento.html#method-i-getNombre","()",""],["getProteinas","Practica6::Alimento","Practica6/Alimento.html#method-i-getProteinas","()",""],["getProteinas","Practica6::Platos","Practica6/Platos.html#method-i-getProteinas","()","<p>retorna las proteinas del plato\n"],["getTail","Practica6::Lista","Practica6/Lista.html#method-i-getTail","()","<p>retorna el tail de la lista\n"],["getTerreno","Practica6::Alimento","Practica6/Alimento.html#method-i-getTerreno","()",""],["getTerreno","Practica6::PlatosA","Practica6/PlatosA.html#method-i-getTerreno","()","<p>retorna el terreno usado\n"],["getValorCalorico","Practica6::Alimento","Practica6/Alimento.html#method-i-getValorCalorico","()","<p>metodo para devolver el valor calorico del alimento\n"],["getValorCaloricoTotal","Practica6::Platos","Practica6/Platos.html#method-i-getValorCaloricoTotal","()","<p>retorna el valor calorico total\n"],["insert","Practica6::Lista","Practica6/Lista.html#method-i-insert","(valor)","<p>inserta un valor en la lista\n"],["insertVector","Practica6::Lista","Practica6/Lista.html#method-i-insertVector","(vector)","<p>inserta varios elementos a la vez en la lista\n"],["new","Practica6::Alimento","Practica6/Alimento.html#method-c-new","(nombre,proteinas,carbohidratos,lipidos,gei,terreno)","<p>constructor de la clase\n"],["new","Practica6::Lista","Practica6/Lista.html#method-c-new","()","<p>contructor\n"],["new","Practica6::Platos","Practica6/Platos.html#method-c-new","(nombr,listA,listG)","<p>constructor de la clase\n"],["new","Practica6::PlatosA","Practica6/PlatosA.html#method-c-new","(nombre,listA,listG)","<p>constructor\n"],["size","Practica6::Lista","Practica6/Lista.html#method-i-size","()","<p>devuelve el tamaño de la lista\n"],["to_s","Practica6::Alimento","Practica6/Alimento.html#method-i-to_s","()","<p>imprimir el alimento formateado\n"],["to_s","Practica6::Lista","Practica6/Lista.html#method-i-to_s","()","<p>imprime la lista formateada\n"],["to_s","Practica6::Platos","Practica6/Platos.html#method-i-to_s","()","<p>imprime el plato formateado\n"],["to_s","Practica6::PlatosA","Practica6/PlatosA.html#method-i-to_s","()","<p>imprime el platosA formateado\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in practica6.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  practica6 (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["README","","README_md.html","","<p>NOMBRE DE LA PRACTICA: Desarrollo Dirigido por Pruebas (TDD)\n<p>NOMBRE: Eduardo\nAPELLIDOS: Nuez Wehbe\nCORREO: ...\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["practica6.gemspec","","practica6_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"]]}}